<Flyout
	x:Class="HotCorner.Uwp.Views.MonitorPickerFlyout"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:hcud="using:HotCorner.Uwp.Devices"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
	xmlns:uac13="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 13)"
	mc:Ignorable="d">

	<Flyout.FlyoutPresenterStyle>
		<Style BasedOn="{StaticResource DefaultFlyoutPresenterStyle}" TargetType="FlyoutPresenter">
			<Setter Property="MinHeight" Value="0" />
			<Setter Property="Padding" Value="4" />
		</Style>
	</Flyout.FlyoutPresenterStyle>

	<Grid>
		<ListView
			x:Name="MonitorList"
			IsItemClickEnabled="True"
			ItemClick="OnMonitorListItemClick"
			Visibility="Collapsed">
			<ListView.ItemContainerStyle>
				<Style BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="ListViewItem">
					<Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
					<Setter Property="HorizontalContentAlignment" Value="Stretch" />
					<Setter Property="MinHeight" Value="0" />
					<Setter Property="Margin" Value="0" />
					<Setter Property="Padding" Value="{StaticResource MenuFlyoutItemThemePaddingNarrow}" />

					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="ListViewItem">
								<ListViewItemPresenter
									x:Name="Root"
									HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
									uac13:CheckBoxBorderBrush="{ThemeResource ListViewItemCheckBoxBorderBrush}"
									uac13:CheckBoxCornerRadius="{ThemeResource ListViewItemCheckBoxCornerRadius}"
									uac13:CheckBoxDisabledBorderBrush="{ThemeResource ListViewItemCheckBoxDisabledBorderBrush}"
									uac13:CheckBoxDisabledBrush="{ThemeResource ListViewItemCheckBoxDisabledBrush}"
									uac13:CheckBoxPointerOverBorderBrush="{ThemeResource ListViewItemCheckBoxPointerOverBorderBrush}"
									uac13:CheckBoxPointerOverBrush="{ThemeResource ListViewItemCheckBoxPointerOverBrush}"
									uac13:CheckBoxPressedBorderBrush="{ThemeResource ListViewItemCheckBoxPressedBorderBrush}"
									uac13:CheckBoxPressedBrush="{ThemeResource ListViewItemCheckBoxPressedBrush}"
									uac13:CheckBoxSelectedBrush="{ThemeResource ListViewItemCheckBoxSelectedBrush}"
									uac13:CheckBoxSelectedDisabledBrush="{ThemeResource ListViewItemCheckBoxSelectedDisabledBrush}"
									uac13:CheckBoxSelectedPointerOverBrush="{ThemeResource ListViewItemCheckBoxSelectedPointerOverBrush}"
									uac13:CheckBoxSelectedPressedBrush="{ThemeResource ListViewItemCheckBoxSelectedPressedBrush}"
									uac13:CheckDisabledBrush="{ThemeResource ListViewItemCheckDisabledBrush}"
									uac13:CheckPressedBrush="{ThemeResource ListViewItemCheckPressedBrush}"
									uac13:SelectedDisabledBackground="{ThemeResource ListViewItemBackgroundSelectedDisabled}"
									uac13:SelectionIndicatorBrush="{ThemeResource ListViewItemSelectionIndicatorBrush}"
									uac13:SelectionIndicatorCornerRadius="{ThemeResource ListViewItemSelectionIndicatorCornerRadius}"
									uac13:SelectionIndicatorDisabledBrush="{ThemeResource ListViewItemSelectionIndicatorDisabledBrush}"
									uac13:SelectionIndicatorPointerOverBrush="{ThemeResource ListViewItemSelectionIndicatorPointerOverBrush}"
									uac13:SelectionIndicatorPressedBrush="{ThemeResource ListViewItemSelectionIndicatorPressedBrush}"
									uac13:SelectionIndicatorVisualEnabled="{ThemeResource ListViewItemSelectionIndicatorVisualEnabled}"
									CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}"
									CheckBrush="{ThemeResource ListViewItemCheckBrush}"
									CheckMode="{ThemeResource ListViewItemCheckMode}"
									ContentMargin="{TemplateBinding Padding}"
									ContentTransitions="{TemplateBinding ContentTransitions}"
									Control.IsTemplateFocusTarget="True"
									CornerRadius="{TemplateBinding CornerRadius}"
									DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
									DragBackground="{ThemeResource ListViewItemDragBackground}"
									DragForeground="{ThemeResource ListViewItemDragForeground}"
									DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
									FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}"
									FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}"
									FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
									FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}"
									FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}"
									FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}"
									FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}"
									PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}"
									PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}"
									PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}"
									PressedBackground="{ThemeResource ListViewItemBackgroundPressed}"
									ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
									SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}"
									SelectedForeground="{ThemeResource ListViewItemForegroundSelected}"
									SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}"
									SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}"
									SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}" />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</ListView.ItemContainerStyle>

			<ListView.ItemContainerTransitions>
				<TransitionCollection />
			</ListView.ItemContainerTransitions>

			<ListView.ItemTemplate>
				<DataTemplate x:DataType="hcud:MonitorInfo">
					<TextBlock Text="{x:Bind DisplayName, Mode=OneWay}" />
				</DataTemplate>
			</ListView.ItemTemplate>
		</ListView>

		<muxc:InfoBar
			x:Name="NoMonitorsInfo"
			x:Uid="MonitorPickerFlyoutNoMonitorsInfo"
			MaxWidth="300"
			CornerRadius="4"
			IsClosable="False"
			IsOpen="True"
			Severity="Informational" />
	</Grid>
</Flyout>
